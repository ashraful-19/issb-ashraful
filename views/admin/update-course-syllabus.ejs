

<%- include('../partials/admin_sidenav.ejs') %>
<style>
  .syllabus-details {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 20px;
  }

  .syllabus-container {
    border: 1px solid #ccc;
    padding: 10px;
    margin: 10px 0;
    background-color: #f9f9f9;
  }

  .syllabus-item {
    display: flex;
    align-items: center;
  }

  .syllabus-item label {
    margin-right: 10px;
  }

  .syllabus-title {
    font-size: 20px;
    margin: 10px 0;
  }

  .add-items-container {
    margin-top: 10px;
  }

  .add-more {
    cursor: pointer;
    color: #007bff;
    margin-top: 10px;
  }

  .added-item {
    border: 1px solid #ccc;
    padding: 10px;
    margin-top: 10px;
    background-color: #f9f9f9;
  }

  .remove-items a {
    color: red;
    text-decoration: none;
  }

  .remove-items a:hover {
    text-decoration: underline;
  }
</style>

<h1>Course Syllabus</h1>
<div class="syllabus-details" id="main-sortable"  data-sortlink="/admin/course/order/<%= courseId %>">
 
  <% 
  // Sort the course syllabus array by the "order" field
  const sortedSyllabus = course.course_syllabus.sort((a, b) => a.order - b.order);
  
  // Iterate through the sorted syllabus array
  sortedSyllabus.forEach(function(syllabus) { 
  %>
  <form action="/admin/course/update-syllabus/<%= courseId %>" method="post" id="id_<%= syllabus._id %>">
    <div class="syllabus-container">
      <div class="syllabus-item" >
        <input type="text" hidden name="id" value="<%= syllabus._id %>">
        <label><%= syllabus.course_content_icon_url %></label>
        <p class="syllabus-title"><%= syllabus.course_content_title %></p>
      </div>
      <div class="add-items-container">
        <div class="add-more">Add More</div>
        <div class="add-items">
                   
          <% 
          // Sort the course content details array by the "order" field
          const sortedContentDetails = syllabus.course_content_details.sort((a, b) => a.order - b.order);
          
          // Iterate through the sorted content details array
          sortedContentDetails.forEach(function(content) { 
          %>



          <div class="added-item">
            <label for="">Type</label><br>
            <select name="type[]" data-selected="<%= content.type %>">
              <option value="video">Video</option>
              <option value="pdf">PDF</option>
              <option value="exam">Exam</option>
            </select><br>
            <label for="">Link</label><br>
            <input type="text" name="link[]" value="<%= content.link %>"><br>
            <label for="">Title</label><br>
            <input type="text" name="title[]" value="<%= content.title %>">
            <div class="remove-items">
              <a href="/admin/course/<%= courseId %>/syllabus/<%= syllabus._id %>/details/<%= content._id %>">Remove</a>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
      <div>
        <button type="submit">Save</button>
      </div>
    </div>
  </form>
  <% }) %>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function() {
    // Add a click event listener to the "Add More" button
    $('.add-more').on('click', function() {
      // Get the parent "add-items" container
      var addItems = $(this).siblings('.add-items');

      // Create a new "added-item" element
      var newItem = $('<div class="added-item">' +
        '<label for="">Type</label><br>' +
        '<select name="type[]">' +
        '<option value="video">Video</option>' +
        '<option value="pdf">PDF</option>' +
        '<option value="exam">Exam</option>' +
        '</select><br>' +
        '<label for="">Link</label><br>' +
        '<input type="text" name="link[]"><br>' +
        '<label for="">Title</label><br>' +
        '<input type="text" name="title[]">' +
        '<div class="remove-items">Remove</div>' +
        '</div>');

      // Insert the new element
      addItems.append(newItem);
    });

    // Add a click event listener to the "Remove" button in "added-item"
    $(document).on('click', '.remove-items', function() {
      $(this).parent().remove();
    });
  });
</script>


<style>
  .progress-bar {
    position: fixed;
    top: 0;
    left: 0;
    height: 5px;
    background-color: rgb(255, 0, 0);
    transition: width 0.3s ease-in-out;
    z-index: 9999;
  }
</style>

<div class="progress-bar"></div>




<script>
  // HTML markup for the progress bar
const progressBar = document.createElement('div');
progressBar.classList.add('progress-bar');

// Function to update the progress bar
function updateProgressBar(percentage) {
  progressBar.style.width = `${percentage}%`;
}

// Function to show the progress bar
function showProgressBar() {
  document.body.appendChild(progressBar);
}

// Function to hide the progress bar
function hideProgressBar() {
  document.body.removeChild(progressBar);
}

// State variable for loading status
let loading = false;

// Event listener for page loading
window.addEventListener('load', () => {
  loading = false;
  hideProgressBar();
});

// Event listener for page redirecting
window.addEventListener('beforeunload', () => {
  loading = true;
  showProgressBar();
});

// Event listener for content loading
document.addEventListener('readystatechange', () => {
  if (document.readyState === 'loading') {
    if (loading) {
      updateProgressBar(20); // Set initial progress bar percentage
      showProgressBar();
    }
  } else if (document.readyState === 'interactive') {
    if (loading) {
      updateProgressBar(50); // Set intermediate progress bar percentage
    }
  } else if (document.readyState === 'complete') {
    if (loading) {
      updateProgressBar(100); // Set final progress bar percentage
      setTimeout(() => hideProgressBar(), 1000); // Hide the progress bar after 1 second
    }
  }
});

// Animate the progress bar while loading
setInterval(() => {
  if (loading) {
    const currentWidth = parseFloat(progressBar.style.width) || 0;
    const newWidth = currentWidth + 1;
    if (newWidth <= 99) {
      updateProgressBar(newWidth);
    }
  }
}, 20);


</script>




<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>

$(document).ready(function() {
  const formAction = $("#main-sortable").data("sortlink"); // Get the form action URL

  $("#main-sortable").sortable({
    placeholder: "sortable-placeholder", // Add a placeholder class for styling
    update: function() {
      const sortableElement = document.getElementById("main-sortable");
      const ids = $(sortableElement).sortable('serialize');
      console.log(ids);
      console.log(formAction)
      $.post(formAction, ids, function(res) {
        console.log(res);
      });
    }
  });
  });
</script>
